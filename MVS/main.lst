 AS V1.42 Beta [Bld 79] - source file main.asm - page 1 - 1/19/2017 10:57:34


       1/       0 :                     ;NeoGeo lagtest v1
       2/       0 :                     ;furrtek CC BY-NC 2017
       3/       0 :                     
       4/       0 :                         cpu 68000
       5/       0 :                     
       6/       0 :                         supmode on
       7/       0 :                     
       8/       0 :                     	INCLUDE "regdefs.asm"
(1)    1/       0 : =$0                 SCB1            equ $0000   ;VRAM, Sprite tilemaps
(1)    2/       0 : =$7000              FIXMAP          equ $7000   ;VRAM, Fix map
(1)    3/       0 : =$8000              SCB2            equ $8000   ;VRAM, Sprite shrink ratios
(1)    4/       0 : =$8200              SCB3            equ $8200   ;VRAM, Sprite Y positions and sizes
(1)    5/       0 : =$8400              SCB4            equ $8400   ;VRAM, Sprite X positions
(1)    6/       0 :                     
(1)    7/       0 : =$8000              BLACK           equ $8000
(1)    8/       0 : =$1007              MIDBLUE         equ $1007
(1)    9/       0 : =$100F              BLUE            equ $100F
(1)   10/       0 : =$2070              MIDGREEN        equ $2070
(1)   11/       0 : =$20F0              GREEN           equ $20F0
(1)   12/       0 : =$3077              MIDCYAN         equ $3077
(1)   13/       0 : =$30FF              CYAN            equ $30FF
(1)   14/       0 : =$4700              MIDRED          equ $4700
(1)   15/       0 : =$4F00              RED             equ $4F00
(1)   16/       0 : =$5707              MIDMAGENTA      equ $5707
(1)   17/       0 : =$5F0F              MAGENTA         equ $5F0F
(1)   18/       0 : =$6F70              ORANGE          equ $6F70
(1)   19/       0 : =$6770              MIDYELLOW       equ $6770
(1)   20/       0 : =$6FF0              YELLOW          equ $6FF0
(1)   21/       0 : =$7777              MIDGREY         equ $7777
(1)   22/       0 : =$7FFF              WHITE           equ $7FFF
(1)   23/       0 :                     
(1)   24/       0 : =$100000            RAMSTART        equ $100000 ;User RAM start
(1)   25/       0 : =$400000            PALETTES        equ $400000 ;Palette RAM start
(1)   26/       0 : =$401FFE            BACKDROPCOLOR   equ PALETTES+(16*2*256)-2
(1)   27/       0 :                     
(1)   28/       0 : =$300000            REG_P1CNT       equ $300000 ;Joystick port 1
(1)   29/       0 : =$300001            REG_DIPSW       equ $300001 ;Dipswitches/Watchdog
(1)   30/       0 : =$320000            REG_SOUND       equ $320000 ;In/Out Z80
(1)   31/       0 : =$320001            REG_STATUS_A    equ $320001
(1)   32/       0 : =$340000            REG_P2CNT       equ $340000 ;Joystick port 2
(1)   33/       0 : =$380000            REG_STATUS_B    equ $380000
(1)   34/       0 : =$380001            REG_POUTPUT     equ $380001 ;Joypad port outputs 	 
(1)   35/       0 : =$380021            REG_SLOT        equ $380021 ;Slot selection
(1)   36/       0 :                     
(1)   37/       0 : =$3A0001            REG_DISPENABL   equ $3A0001 ;Video output ON
(1)   38/       0 : =$3A0011            REG_DISPDSABL   equ $3A0011 ;Video output OFF
(1)   39/       0 : =$3A0013            REG_SWPROM      equ $3A0013 ;Use ROM vector table
(1)   40/       0 : =$3A0005            REG_CRDUNLOCK1  equ $3A0005 ;Allow /WE to pass through to memory card when low
(1)   41/       0 : =$3A0015            REG_CRDLOCK1    equ $3A0015 ;Don't allow /WE to pass through to memory card
(1)   42/       0 : =$3A0007            REG_CRDLOCK2    equ $3A0007 ;Don't allow /WE to pass through to memory card
(1)   43/       0 : =$3A0017            REG_CRDUNLOCK2  equ $3A0017 ;Allow /WE to pass through to memory card when high
(1)   44/       0 : =$3A0009            REG_CRDREGSEL 	equ $3A0009
(1)   45/       0 : =$3A0019            REG_CRDNORMAL   equ $3A0019
(1)   46/       0 : =$3A000B            REG_BRDFIX      equ $3A000B ;Use board fix tileset
(1)   47/       0 : =$3A001B            REG_CRTFIX      equ $3A001B ;Use ROM fix tileset
(1)   48/       0 : =$3A000D            REG_SRAMLOCK    equ $3A000D ;Write-protect SRAM
(1)   49/       0 : =$3A001D            REG_SRAMUNLOCK  equ $3A001D ;Write-unprotect SRAM
(1)   50/       0 : =$3A000F            REG_PALBANK1    equ $3A000F ;Use palette bank 1
(1)   51/       0 : =$3A001F            REG_PALBANK0    equ $3A001F ;Use palette bank 0 (default)
(1)   52/       0 :                     
 AS V1.42 Beta [Bld 79] - source file main.asm(regdefs.asm) - page 2 - 1/19/2017 10:57:34


(1)   53/       0 : =$3C0000            VRAM_ADDR       equ $3C0000
(1)   54/       0 : =$3C0002            VRAM_RW         equ $3C0002
(1)   55/       0 : =$3C0004            VRAM_MOD        equ $3C0004
(1)   56/       0 : =$3C0006            REG_LSPCMODE    equ $3C0006
(1)   57/       0 : =$3C0008            REG_TIMERHIGH   equ $3C0008
(1)   58/       0 : =$3C000A            REG_TIMERLOW    equ $3C000A
(1)   59/       0 : =$3C000C            REG_IRQACK      equ $3C000C
(1)   60/       0 : =$3C000E            REG_TIMERSTOP   equ $3C000E
(1)   61/       0 :                     
(1)   62/       0 :                     ; BIOS calls
(1)   63/       0 : =$C00438            BIOSF_SYSTEM_INT1   equ $C00438
(1)   64/       0 : =$C00444            BIOSF_SYSTEM_RETURN equ $C00444
(1)   65/       0 : =$C0044A            BIOSF_SYSTEM_IO     equ $C0044A ;Sets RAM values from I/O ports
(1)   66/       0 : =$C00450            BIOSF_CREDIT_CHECK  equ $C00450
(1)   67/       0 : =$C00456            BIOSF_CREDIT_DOWN   equ $C00456
(1)   68/       0 : =$C0045C            BIOSF_READ_CALENDAR equ $C0045C ;Set calendar addresses (10FDD2+), MVS only
(1)   69/       0 : =$C00468            BIOSF_CARD          equ $C00468 ;Perform memory card operations
(1)   70/       0 : =$C0046E            BIOSF_CARD_ERROR    equ $C0046E ;In case a memory card error occurred, prompt user for action
(1)   71/       0 : =$C00470            BIOSF_VIDEOEN       equ $C00470 ;Enable/disable video layers, CD only
(1)   72/       0 : =$C00474            BIOSF_HOWTOPLAY     equ $C00474 ;Show how-to-play presentation, MVS only
(1)   73/       0 : =$C004C2            BIOSF_FIX_CLEAR     equ $C004C2 ;Clear fix layer
(1)   74/       0 : =$C004C8            BIOSF_LSP_1ST       equ $C004C8 ;Clear sprites
(1)   75/       0 : =$C004CE            BIOSF_MESS_OUT      equ $C004CE
(1)   76/       0 : =$C00546            BIOSF_UPLOAD        equ $C00546 ;Upload data to DRAM, CD only 
(1)   77/       0 : =$C0056A            BIOSF_CDDACMD       equ $C0056A ;Issue CDDA command, CD only
(1)   78/       0 :                     
(1)   79/       0 : =$10FD80            BIOS_SYSTEM_MODE  equ $10FD80 ;Game/system mode (bit 7)
(1)   80/       0 : =$10FD82            BIOS_MVS_FLAG     equ $10FD82
(1)   81/       0 : =$10FD83            BIOS_COUNTRY_CODE equ $10FD83
(1)   82/       0 : =$10FD84            BIOS_GAME_DIP     equ $10FD84 ;start of soft DIPs settings (up to $10FD93)
(1)   83/       0 :                     
(1)   84/       0 :                     ; Set by BIOSF_SYSTEM_IO
(1)   85/       0 : =$10FD94            BIOS_P1STATUS   equ $10FD94
(1)   86/       0 : =$10FD95            BIOS_P1PREVIOUS equ $10FD95 ;previous joystick 1 state
(1)   87/       0 : =$10FD96            BIOS_P1CURRENT  equ $10FD96 ;joystick 1 state
(1)   88/       0 : =$10FD97            BIOS_P1CHANGE   equ $10FD97 ;joystick 1 state change
(1)   89/       0 : =$10FD98            BIOS_P1REPEAT   equ $10FD98 ;joystick 1 repeat
(1)   90/       0 : =$10FD99            BIOS_P1TIMER    equ $10FD99
(1)   91/       0 :                     
(1)   92/       0 : =$10FD9A            BIOS_P2STATUS   equ $10FD9A
(1)   93/       0 : =$10FD9B            BIOS_P2PREVIOUS equ $10FD9B ;previous joystick 2 state
(1)   94/       0 : =$10FD9C            BIOS_P2CURRENT  equ $10FD9C ;joystick 2 state
(1)   95/       0 : =$10FD9D            BIOS_P2CHANGE   equ $10FD9D ;joystick 2 state change
(1)   96/       0 : =$10FD9E            BIOS_P2REPEAT   equ $10FD9E ;joystick 2 repeat
(1)   97/       0 : =$10FD99            BIOS_P2TIMER    equ $10FD99
(1)   98/       0 :                     
(1)   99/       0 :                     ;button definitions
(1)  100/       0 : =$0                 CNT_UP	        equ 0
(1)  101/       0 : =$1                 CNT_DN	        equ 1
(1)  102/       0 : =$2                 CNT_LE	        equ 2
(1)  103/       0 : =$3                 CNT_RI	        equ 3
(1)  104/       0 : =$4                 CNT_A	        equ 4
(1)  105/       0 : =$5                 CNT_B	        equ 5
(1)  106/       0 : =$6                 CNT_C	        equ 6
(1)  107/       0 : =$7                 CNT_D	        equ 7
(1)  108/       0 :                     
(1)  109/       0 : =$10FDAC            BIOS_STATCURNT    equ $10FDAC ;joystick 1/2 start/select
(1)  110/       0 : =$10FDAD            BIOS_STATCHANGE   equ $10FDAD ;previous joystick 1/2 start/select
(1)  111/       0 : =$10FDAE            BIOS_USER_REQUEST equ $10FDAE
(1)  112/       0 : =$10FDAF            BIOS_USER_MODE    equ $10FDAF
 AS V1.42 Beta [Bld 79] - source file main.asm(regdefs.asm) - page 3 - 1/19/2017 10:57:34


(1)  113/       0 : =$10FDB4            BIOS_START_FLAG   equ $10FDB4
(1)  114/       0 : =$10FDBE            BIOS_MESS_POINT   equ $10FDBE
(1)  115/       0 : =$10FDC2            BIOS_MESS_BUSY    equ $10FDC2
(1)  116/       0 :                     
(1)  117/       0 :                     ; Memory card related:
(1)  118/       0 : =$10FDC4            BIOS_CRDF       equ $10FDC4 ;byte: function to perform when calling BIOSF_CRDACCESS, see below table
(1)  119/       0 : =$10FDC6            BIOS_CRDRESULT  equ $10FDC6 ;byte: 00 on success, else 80+ and encodes the error, see below table
(1)  120/       0 : =$10FDC8            BIOS_CRDPTR     equ $10FDC8 ;longword: pointer to read from/write to
(1)  121/       0 : =$10FDCC            BIOS_CRDSIZE    equ $10FDCC ;word: how much data to read/write from/to card
(1)  122/       0 : =$10FDCE            BIOS_CRDNGH     equ $10FDCE ;word: usually game NGH. Unique identifier for the game that 'owns' the save file
(1)  123/       0 : =$10FDD0            BIOS_CRDFILE    equ $10FDD0 ;word: each NGH has up to 16 save 'files' associated with
(1)  124/       0 :                     
(1)  125/       0 :                     ; Calendar, only on MVS (in BCD)
(1)  126/       0 : =$10FDD2            BIOS_YEAR       equ $10FDD2 ;last 2 digits of year
(1)  127/       0 : =$10FDD3            BIOS_MONTH      equ $10FDD3
(1)  128/       0 : =$10FDD4            BIOS_DAY        equ $10FDD4
(1)  129/       0 : =$10FDD5            BIOS_WEEKDAY    equ $10FDD5 ;Sunday = 00, Monday = 01 ... Saturday = 06
(1)  130/       0 : =$10FDD6            BIOS_HOUR       equ $10FDD6 ;24 hour time
(1)  131/       0 : =$10FDD7            BIOS_MINUTE     equ $10FDD7
(1)  132/       0 : =$10FDD8            BIOS_SECOND     equ $10FDD8
(1)  133/       0 :                     
(1)  134/       0 : =$10FDDA            BIOS_SELECT_TIMER equ $10FDDA ;Byte: game start countdown
(1)  135/       0 : =$10FE80            BIOS_DEVMODE      equ $10FE80 ;Byte: non-zero for developer mode
(1)  136/       0 :                     
(1)  137/       0 :                     ; Upload to DRAM
(1)  138/       0 : =$10FEF4            BIOS_UPDEST     equ $10FEF4 ;longword: destination address (!)
(1)  139/       0 : =$10FEF8            BIOS_UPSRC      equ $10FEF8 ;longword: source address
(1)  140/       0 : =$10FEFC            BIOS_UPSIZE     equ $10FEFC ;longword: size
(1)  141/       0 : =$10FEDA            BIOS_UPZONE     equ $10FEDA ;byte: zone (0=PRG, 1=FIX, 2=SPR, 3=Z80, 4=PCM, 5=PAT)
(1)  142/       0 : =$10FEDB            BIOS_UPBANK     equ $10FEDB ;byte: bank
(1)  143/       0 :                     
(1)  144/       0 : =$D00046            SOUND_STOP      equ $D00046 ;byte
       9/       0 :                         INCLUDE "header.asm"
(1)    1/       0 :                         ORG $0
(1)    2/       0 : 0010 F300               dc.l $10F300		; Initial SP
(1)    3/       4 : 00C0 0402               dc.l $C00402		; Initial PC
(1)    4/       8 : 00C0 0408 00C0 040E     dc.l $C00408, $C0040E, $C00414, ErrDivZero	; Bus error, Address error, Illegal Instruction, Divide by 0
                    00C0 0414 0000 0224 
(1)    5/      18 : 0000 0224 0000 0224     dc.l ErrCHK, ErrTRAPV, $C0041A, $C00420		; CHK, TRAPV ,Privilege Violation, Trace
                    00C0 041A 00C0 0420 
(1)    6/      28 : 0000 0224 0000 0224     dc.l ErrLineA, ErrLineF, $C00426, $C00426	; Emu, Emu, Reserved, Reserved
                    00C0 0426 00C0 0426 
(1)    7/      38 : 00C0 0426 00C0 042C     dc.l $C00426, $C0042C, $C00426, $C00426		; Reserved, Reserved, Reserved, Reserved
                    00C0 0426 00C0 0426 
(1)    8/      48 : 00C0 0426 00C0 0426     dc.l $C00426, $C00426, $C00426, $C00426		; Reserved, Reserved, Reserved, Reserved
                    00C0 0426 00C0 0426 
(1)    9/      58 : 00C0 0426 00C0 0426     dc.l $C00426, $C00426, $C00432, VBI			; Reserved, Reserved, Spurious Interrupt, Vertical blank
                    00C0 0432 0000 031A 
(1)   10/      68 : 0000 030A 0000 0300     dc.l TMRI, IRQ3, ErrG, ErrG					; Timer interrupt, Cold boot interrupt
                    0000 0222 0000 0222 
(1)   11/      78 : 0000 0222 0000 0222     dc.l ErrG, ErrG, ErrG, ErrG					; Auto, Auto, Trap 0, Trap1...
                    0000 0222 0000 0222 
(1)   12/      88 : 0000 0222 0000 0222     dc.l ErrG, ErrG, ErrG, ErrG
                    0000 0222 0000 0222 
(1)   13/      98 : FFFF FFFF FFFF FFFF     dc.l $FFFFFFFF,$FFFFFFFF,$FFFFFFFF,$FFFFFFFF
                    FFFF FFFF FFFF FFFF 
(1)   14/      A8 : FFFF FFFF FFFF FFFF     dc.l $FFFFFFFF,$FFFFFFFF,$FFFFFFFF,$FFFFFFFF
                    FFFF FFFF FFFF FFFF 
(1)   15/      B8 : FFFF FFFF FFFF FFFF     dc.l $FFFFFFFF,$FFFFFFFF,$FFFFFFFF,$FFFFFFFF
                    FFFF FFFF FFFF FFFF 
 AS V1.42 Beta [Bld 79] - source file main.asm(header.asm) - page 4 - 1/19/2017 10:57:34


(1)   16/      C8 : FFFF FFFF FFFF FFFF     dc.l $FFFFFFFF,$FFFFFFFF,$FFFFFFFF,$FFFFFFFF
                    FFFF FFFF FFFF FFFF 
(1)   17/      D8 : FFFF FFFF FFFF FFFF     dc.l $FFFFFFFF,$FFFFFFFF,$FFFFFFFF,$FFFFFFFF
                    FFFF FFFF FFFF FFFF 
(1)   18/      E8 : FFFF FFFF FFFF FFFF     dc.l $FFFFFFFF,$FFFFFFFF,$FFFFFFFF,$FFFFFFFF
                    FFFF FFFF FFFF FFFF 
(1)   19/      F8 : FFFF FFFF FFFF FFFF     dc.l $FFFFFFFF,$FFFFFFFF
(1)   20/     100 :                     
(1)   21/     100 :                         ORG $0100
(1)   22/     100 : 4E45 4F2D 4745 4F00     dc.b "NEO-GEO", $00
(1)   23/     108 :                     
(1)   24/     108 : 0029                    dc.w $0029			; NGH (Legend of Success Joe, because nobody wants that)
(1)   25/     10A : 0002 0000               dc.l $00020000      ; P1 size (128KiB)
(1)   26/     10E : 0010 F000               dc.l $0010F000		; Pointer to debug DIPs (none)
(1)   27/     112 : 0001                    dc.w $0001			; No save (0 is not allowed ?)
(1)   28/     114 :                     
(1)   29/     114 :                         ORG $0114
(1)   30/     114 : 0200                    dc.w $0200			; No eye-catcher, sprite bank number ignored
(1)   31/     116 : 0000 0200               dc.l SoftDIPs		; JP
(1)   32/     11A : 0000 0200               dc.l SoftDIPs		; US
(1)   33/     11E : 0000 0200               dc.l SoftDIPs		; EU
(1)   34/     122 :                     
(1)   35/     122 :                         ORG $0122
(1)   36/     122 : 4EF8 0236           	jmp User
(1)   37/     128 :                         ORG $0128
(1)   38/     128 : 4EF8 0258           	jmp _rt				; Player_start
(1)   39/     12E :                         ORG $012E
(1)   40/     12E : 4EF8 0258           	jmp _rt				; Demo_end
(1)   41/     134 :                         ORG $0134
(1)   42/     134 : 4EF8 0258           	jmp _rt				; Coin_sound
(1)   43/     138 :                     
(1)   44/     182 :                         ORG $0182
(1)   45/     182 : 0000 0186           	dc.l SCode			; Pointer to security code
(1)   46/     186 :                     
(1)   47/     186 :                     SCode:
(1)   48/     186 : 7600 4A6D 0A14 6600 	dc.l $76004A6D, $0A146600, $003C206D, $0A043E2D
                    003C 206D 0A04 3E2D 
(1)   49/     196 : 0A08 13C0 0030 0001 	dc.l $0A0813C0, $00300001, $32100C01, $00FF671A
                    3210 0C01 00FF 671A 
(1)   50/     1A6 : 3028 0002 B02D 0ACE 	dc.l $30280002, $B02D0ACE, $66103028, $0004B02D
                    6610 3028 0004 B02D 
(1)   51/     1B6 : 0ACF 6606 B22D 0AD0 	dc.l $0ACF6606, $B22D0AD0, $67085088, $51CFFFD4
                    6708 5088 51CF FFD4 
(1)   52/     1C6 : 3607 4E75 206D 0A04 	dc.l $36074E75, $206D0A04, $3E2D0A08, $3210E049
                    3E2D 0A08 3210 E049 
(1)   53/     1D6 : 0C01 00FF 671A 3010 	dc.l $0C0100FF, $671A3010, $B02D0ACE, $66123028
                    B02D 0ACE 6612 3028 
(1)   54/     1E6 : 0002 E048 B02D 0ACF 	dc.l $0002E048, $B02D0ACF, $6606B22D, $0AD06708
                    6606 B22D 0AD0 6708 
(1)   55/     1F6 : 5888 51CF FFD8 3607 	dc.l $588851CF, $FFD83607
(1)   56/     1FE : 4E75                	dc.w $4E75
(1)   57/     200 :                     
(1)   58/     200 :                     SoftDIPs:
(1)   59/     200 : 4E45 4F47 454F 204C     dc.b "NEOGEO LAG TEST "		; Title
                    4147 2054 4553 5420 
(1)   60/     210 : FFFF FFFF               dc.w $FFFF, $FFFF			; Special options
(1)   61/     214 : FFFF                	dc.b $FF, $FF
(1)   62/     216 : 0000                    dc.b $00					; Simple options
(1)   63/     218 : 0000 0000 0000 0000 	dc.b $00,$00,$00,$00,$00,$00,$00,$00,$00
                    0000                
 AS V1.42 Beta [Bld 79] - source file main.asm(header.asm) - page 5 - 1/19/2017 10:57:34


(1)   64/     222 :                     
(1)   65/     222 :                     ErrG:
(1)   66/     222 : 4E73                	rte
(1)   67/     224 :                     	
(1)   68/     224 :                     ErrDivZero:
(1)   69/     224 :                     ErrCHK:
(1)   70/     224 :                     ErrTRAPV:
(1)   71/     224 :                     ErrLineA:
(1)   72/     224 :                     ErrLineF:
(1)   73/     224 : 4E75                    rts
(1)   74/     226 :                     
(1)   75/     226 :                     jt_user:
(1)   76/     226 : 0000 025A           	dc.l   Init			; Start-up init
(1)   77/     22A : 0000 0258           	dc.l   _rt			; Eye-catcher
(1)   78/     22E : 0000 1000           	dc.l   Start        ; Game/demo
(1)   79/     232 : 0000 0258           	dc.l   _rt			; Title display
(1)   80/     236 :                     
(1)   81/     236 :                     User:
(1)   82/     236 : 13C0 0030 0001          move.b  d0,REG_DIPSW
(1)   83/     23C : 1039 0010 FDAE          move.b  BIOS_USER_REQUEST,d0
(1)   84/     242 : 0200 0003               andi.b  #3,d0
(1)   85/     246 : E548                    lsl.w   #2,d0
(1)   86/     248 : 41F8 0226               lea     jt_user,a0
(1)   87/     24C : 2070 0000               movea.l (a0,d0),a0
(1)   88/     250 : 4E90                    jsr     (a0)
(1)   89/     252 : 4EF9 00C0 0444          jmp     BIOSF_SYSTEM_RETURN
(1)   90/     258 :                     
(1)   91/     258 :                     _rt:
(1)   92/     258 : 4E75                	rts
(1)   93/     25A :                     
(1)   94/     25A :                     Init:
(1)   95/     25A : 33FC 0539 0010 F000 	move.w  #1337,$10F000		; Backup RAM init
(1)   96/     262 : 4E75                	rts
(1)   97/     264 :                     
      10/     264 :                         INCLUDE "ram.asm"
(1)    1/  100000 :                     	ORG RAMSTART
(1)    2/  100000 :                     
(1)    3/  100000 :                     FLAG_VBI:		ds.b 1
(1)    4/  100002 :                     FLAG_UPDATE:	ds.b 1
(1)    5/  100004 :                     FRAMES:			ds.b 1
(1)    6/  100006 :                     LAG_LINES:		ds.w 1
(1)    7/  100008 :                     LAG_LATCH:		ds.w 1
(1)    8/  10000A :                     LAG_SIGN:		ds.b 1
(1)    9/  10000C :                     
(1)   10/  10000C :                     COUNT:			ds.b 1
(1)   11/  10000E :                     DIRECTION:		ds.b 1
(1)   12/  100010 :                     
(1)   13/  100010 :                     VRAM_BUFFER:	ds.w 16
(1)   14/  100030 :                     PREV_INPUT:		ds.b 1
(1)   15/  100032 :                     
      11/  100032 :                     
      12/     300 :                         ORG $300
      13/     300 :                     	INCLUDE "irq.asm"
(1)    1/     300 :                     IRQ3:
(1)    2/     300 : 33FC 0001 003C 000C     move.w  #1,REG_IRQACK
(1)    3/     308 : 4E73                    rte
(1)    4/     30A :                     
(1)    5/     30A :                     TMRI:
(1)    6/     30A : 5279 0010 0006      	addq.w  #1,LAG_LINES
(1)    7/     310 : 33FC 0002 003C 000C     move.w  #2,REG_IRQACK
 AS V1.42 Beta [Bld 79] - source file main.asm(irq.asm) - page 6 - 1/19/2017 10:57:34


(1)    8/     318 : 4E73                    rte
(1)    9/     31A :                     
(1)   10/     31A :                     VBI:
(1)   11/     31A : 0839 0007 0010 FD80     btst    #7,BIOS_SYSTEM_MODE
(1)   12/     322 : 6606                    bne     .uservbi
(1)   13/     324 : 4EF9 00C0 0438          jmp     BIOSF_SYSTEM_INT1
(1)   14/     32A :                     .uservbi:
(1)   15/     32A : 2F00                	move.l  d0,-(a7)
(1)   16/     32C : 33FC 0004 003C 000C     move.w  #4,REG_IRQACK
(1)   17/     334 : 46FC 2000               move.w  #$2000,sr
(1)   18/     338 :                     
(1)   19/     338 : 13C0 0030 0001          move.b  d0,REG_DIPSW			; Watchdoge
(1)   20/     33E : 5239 0010 0004          addq.b  #1,FRAMES
(1)   21/     344 : 50F9 0010 0000          st.b    FLAG_VBI
(1)   22/     34A : 201F                	move.l  (a7)+,d0
(1)   23/     34C : 4E73                    rte
(1)   24/     34E :                     
      14/     34E :                     
      15/    1000 :                     	ORG $1000
      16/    1000 :                     Start:
      17/    1000 : 4FF9 0010 F300          lea     $10F300,a7
      18/    1006 : 33FC 0000 003C 0006     move.w  #$0000,REG_LSPCMODE
      19/    100E :                     
      20/    100E : 13FC 0002 0010 FDAE     move.b  #2,BIOS_USER_REQUEST	; Game in progress
      21/    1016 :                     
      22/    1016 : 2E3C 0000 0797          move.l  #($F300/32)-1,d7		; Clear work RAM
      23/    101C : 41F9 0010 0000          lea     RAMSTART,a0
      24/    1022 : 7000                    moveq.l #0,d0
      25/    1024 :                     .clear_ram:
      26/    1024 : 13C0 0030 0001          move.b  d0,REG_DIPSW			; Watchdoge
      27/    102A : 20C0                    move.l  d0,(a0)+
      28/    102C : 20C0                    move.l  d0,(a0)+
      29/    102E : 20C0                    move.l  d0,(a0)+
      30/    1030 : 20C0                    move.l  d0,(a0)+
      31/    1032 : 20C0                    move.l  d0,(a0)+
      32/    1034 : 20C0                    move.l  d0,(a0)+
      33/    1036 : 20C0                    move.l  d0,(a0)+
      34/    1038 : 20C0                    move.l  d0,(a0)+
      35/    103A : 51CF FFE8               dbra    d7,.clear_ram
      36/    103E :                     
      37/    103E : 33FC 0007 003C 000C     move.w  #7,REG_IRQACK
      38/    1046 : 46FC 2000               move.w  #$2000,sr 				; Allow IRQs
      39/    104A :                     
      40/    104A : 33FC 8000 0040 0000     move.w  #BLACK,PALETTES			; Palette 0 color 0
      41/    1052 : 33FC 7FFF 0040 0002     move.w  #WHITE,PALETTES+2		; Palette 0 color 1: Text
      42/    105A : 33FC 8000 0040 0004     move.w  #BLACK,PALETTES+4		; Palette 0 color 2
      43/    1062 : 33FC 0BBB 0040 0008     move.w  #$0BBB,PALETTES+8		; Palette 0 color 4: Box
      44/    106A : 33FC 8000 0040 0014     move.w  #BLACK,PALETTES+20		; Palette 1 color 2
      45/    1072 : 33FC 4F00 0040 0018     move.w  #RED,PALETTES+24		; Palette 1 color 4: Line
      46/    107A : 33FC 8000 0040 1FFE     move.w  #BLACK,BACKDROPCOLOR
      47/    1082 :                     
      48/    1082 : 4EB9 00C0 04C2          jsr     BIOSF_FIX_CLEAR
      49/    1088 : 4EB9 00C0 04C8          jsr     BIOSF_LSP_1ST
      50/    108E :                     
      51/    108E :                         ; Display box
      52/    108E : 41F8 138C               lea     box_data,a0
      53/    1092 : 323C 716C           	move.w  #$716C,d1
      54/    1096 : 343C 0300           	move.w  #$0300,d2
      55/    109A : 4EB8 1418               jsr     automap
      56/    109E :                         
 AS V1.42 Beta [Bld 79] - source file main.asm - page 7 - 1/19/2017 10:57:34


      57/    109E :                         ; Display title
      58/    109E : 08F9 0000 0010 FDC2 	bset.b  #0,BIOS_MESS_BUSY       ; Busy
      59/    10A6 : 2079 0010 FDBE      	movea.l BIOS_MESS_POINT,a0  	; Get current pointer
      60/    10AC : 20FC 0000 134A      	move.l  #MESS_MENU,(a0)+
      61/    10B2 : 23C8 0010 FDBE      	move.l  a0,BIOS_MESS_POINT  	; Update pointer
      62/    10B8 : 08B9 0000 0010 FDC2 	bclr.b  #0,BIOS_MESS_BUSY   	; Ready to go
      63/    10C0 :                     
      64/    10C0 : 33FC 00D0 003C 0006 	move.w  #$00D0,REG_LSPCMODE 	; Timer frame reload, zero reload, and IRQ enable
      65/    10C8 : 33FC 0000 003C 0008 	move.w  #$0000,REG_TIMERHIGH
      66/    10D0 : 33FC 017F 003C 000A 	move.w  #$017F,REG_TIMERLOW	 	; 384-1 pixels
      67/    10D8 : 33FC 0007 003C 000C     move.w  #7,REG_IRQACK			; Clear IRQs
      68/    10E0 :                     
      69/    10E0 : 4239 0010 0000          clr.b   FLAG_VBI
      70/    10E6 :                     
      71/    10E6 :                     MainLoop:
      72/    10E6 : 4A39 0010 0000          tst.b   FLAG_VBI				; Wait for VBI
      73/    10EC : 67F8                    beq     MainLoop
      74/    10EE : 4239 0010 0000          clr.b   FLAG_VBI
      75/    10F4 :                     
      76/    10F4 :                     	; Update screen as quickly as possible
      77/    10F4 : 33FC 0020 003C 0004 	move.w  #$20,VRAM_MOD
      78/    10FC :                     
      79/    10FC :                     	; Color flash (3 frames)
      80/    10FC : 303C 0BBB               move.w  #$0BBB,d0
      81/    1100 : 0C39 0038 0010 000C 	cmp.b   #56,COUNT
      82/    1108 : 6714                	beq     .orange
      83/    110A : 0C39 003A 0010 000C 	cmp.b   #58,COUNT
      84/    1112 : 6710                	beq     .red
      85/    1114 : 0C39 003C 0010 000C 	cmp.b   #60,COUNT
      86/    111C : 660A                	bne     .flash
      87/    111E :                     .orange:
      88/    111E : 303C 0F90               move.w  #$0F90,d0
      89/    1122 : 6004                    bra     .flash
      90/    1124 :                     .red:
      91/    1124 : 303C 0F00               move.w  #$0F00,d0
      92/    1128 :                     .flash:
      93/    1128 : 33C0 0040 0008          move.w  d0,PALETTES+8
      94/    112E :                     
      95/    112E :                     	; Draw moving bar
      96/    112E : 33FC 718D 003C 0000 	move.w  #$718D,VRAM_ADDR
      97/    1136 : 7E0F                    moveq.l #15,d7
      98/    1138 : 4EB8 144C           	jsr     vramcopy
      99/    113C : 33FC 718E 003C 0000 	move.w  #$718E,VRAM_ADDR
     100/    1144 : 7E0F                    moveq.l #15,d7
     101/    1146 : 4EB8 144C           	jsr     vramcopy
     102/    114A :                     
     103/    114A :                     
     104/    114A :                     
     105/    114A :                     	; Trigger loop
     106/    114A :                     .trig_loop:
     107/    114A : 3839 003C 0006      	move.w  REG_LSPCMODE,d4
     108/    1150 : EE4C                	lsr.w   #7,d4          		; Get raster #
     109/    1152 : 0C39 003A 0010 000C 	cmp.b   #58,COUNT			; Is it reference time ?
     110/    115A : 660C                	bne     .no_ref
     111/    115C : B87C 0170           	cmp.w   #$170,d4			; Approx. line where moving bar shows up
     112/    1160 : 6606                	bne     .no_ref
     113/    1162 : 4279 0010 0006          clr.w   LAG_LINES			; Right here, right now
     114/    1168 :                     .no_ref:
     115/    1168 :                     
     116/    1168 : 1039 0030 0000          move.b  REG_P1CNT,d0
 AS V1.42 Beta [Bld 79] - source file main.asm - page 8 - 1/19/2017 10:57:34


     117/    116E : 1239 0034 0000          move.b  REG_P2CNT,d1
     118/    1174 : 1439 0010 0030          move.b  PREV_INPUT,d2		; MacroAS bug workaround
     119/    117A : C001                    and.b   d1,d0				; Mix P1 & P2 inputs
     120/    117C : 4600                    not.b   d0
     121/    117E : 0200 00F0               andi.b  #$F0,d0				; Keep buttons only
     122/    1182 : 1200                	move.b  d0,d1
     123/    1184 : B500                	eor.b   d2,d0				; Difference
     124/    1186 : 13C1 0010 0030      	move.b  d1,PREV_INPUT
     125/    118C : C001                	and.b   d1,d0				; Test for rising edge
     126/    118E : 6738                	beq     .no_input
     127/    1190 : 3039 0010 0006      	move.w  LAG_LINES,d0		; Quick, latch !
     128/    1196 : 13FC 002B 0010 000A 	move.b  #$2B,LAG_SIGN       ; +: Too late
     129/    119E : B07C 1DE8           	cmp.w   #7656,d0            ; 116 / 2 / 2 * 264 = 7656
     130/    11A2 : 630E                	bls     .positive
     131/    11A4 : 4440                	neg.w   d0
     132/    11A6 : 0640 3BD0           	addi.w  #15312,d0    		; 116 / 2 * 264 = 15312
     133/    11AA : 13FC 002D 0010 000A 	move.b  #$2D,LAG_SIGN		; -: Too early
     134/    11B2 :                     .positive:
     135/    11B2 :                     	; LAG_LINES = number of lines
     136/    11B2 :                     	; 1 line = 384px = 384/6000000s = 64us
     137/    11B2 :                     	; LAG_LATCH = ms value = LAG_LINES * 64 / 1000
     138/    11B2 : 7200                	moveq.l #0,d1
     139/    11B4 : 3200                    move.w  d0,d1
     140/    11B6 : ED89                	lsl.l   #6,d1				; *64
     141/    11B8 : 82FC 03E8           	divu.w  #1000,d1			; /1000
     142/    11BC :                     
     143/    11BC : 33C1 0010 0008      	move.w  d1,LAG_LATCH
     144/    11C2 : 50F9 0010 0002      	st.b	FLAG_UPDATE			; Need to update display
     145/    11C8 :                     .no_input:
     146/    11C8 :                     
     147/    11C8 : B87C 01F0           	cmp.w   #$1F0,d4
     148/    11CC : 6600 FF7C           	bne     .trig_loop			; Exit loop at end of active display
     149/    11D0 :                     
     150/    11D0 :                     
     151/    11D0 :                     
     152/    11D0 :                     	; Display lag value if needed
     153/    11D0 : 4A39 0010 0002      	tst.b   FLAG_UPDATE
     154/    11D6 : 6736                	beq     .no_update
     155/    11D8 : 4239 0010 0002      	clr.b   FLAG_UPDATE
     156/    11DE : 33FC 7190 003C 0000     move.w  #$7190,VRAM_ADDR
     157/    11E6 : 4240                	clr.w   d0
     158/    11E8 : 1039 0010 000A      	move.b  LAG_SIGN,d0
     159/    11EE : 4E71                	nop
     160/    11F0 : 33C0 003C 0002          move.w  d0,VRAM_RW
     161/    11F6 : 3039 0010 0008          move.w  LAG_LATCH,d0
     162/    11FC : 4EB8 132C           	jsr     hex2bcd
     163/    1200 : 3002                    move.w  d2,d0
     164/    1202 : 33FC 7210 003C 0000     move.w  #$7210,VRAM_ADDR
     165/    120A : 4EB8 1464               jsr     digiwrite
     166/    120E :                     .no_update:
     167/    120E :                     
     168/    120E :                     	; Display frame counter
     169/    120E : 7000                	moveq.l #0,d0
     170/    1210 : 1039 0010 0004          move.b  FRAMES,d0
     171/    1216 : 4EB8 132C           	jsr     hex2bcd
     172/    121A : 3002                    move.w  d2,d0
     173/    121C : 33FC 7350 003C 0000     move.w  #$7350,VRAM_ADDR
     174/    1224 : 4EB8 1464               jsr     digiwrite
     175/    1228 :                     
     176/    1228 :                     	; :)
 AS V1.42 Beta [Bld 79] - source file main.asm - page 9 - 1/19/2017 10:57:34


     177/    1228 : 1039 0032 0001      	move.b  REG_STATUS_A,d0
     178/    122E : 0200 0003           	andi.b  #3,d0
     179/    1232 : B03C 0003           	cmp.b   #3,d0
     180/    1236 : 6758                    beq     .no_ee
     181/    1238 : 33FC 0001 003C 0004     move.w  #$1,VRAM_MOD
     182/    1240 : 33FC 6FF0 0040 0002     move.w  #YELLOW,PALETTES+2
     183/    1248 : 33FC 5F0F 0040 0004     move.w  #MAGENTA,PALETTES+4
     184/    1250 : 33FC 5F0F 0040 1FFE     move.w  #MAGENTA,BACKDROPCOLOR
     185/    1258 : 33FC 8000 0040 0008     move.w  #BLACK,PALETTES+8
     186/    1260 : 33FC 7284 003C 0000     move.w  #$7284,VRAM_ADDR
     187/    1268 : 33FC 5F0F 0040 0014     move.w  #MAGENTA,PALETTES+20
     188/    1270 : 33FC 20F0 0040 0018     move.w  #GREEN,PALETTES+24
     189/    1278 : 4E71                    nop
     190/    127A : 33FC 0146 003C 0002     move.w  #$146,VRAM_RW
     191/    1282 : 4E71                    nop
     192/    1284 : 4E71                    nop
     193/    1286 : 4E71                    nop
     194/    1288 : 33FC 0246 003C 0002     move.w  #$246,VRAM_RW
     195/    1290 :                     .no_ee:
     196/    1290 :                     
     197/    1290 :                     
     198/    1290 :                         ; Do housekeeping now
     199/    1290 :                         ;jsr     BIOSF_SYSTEM_IO	Do not want
     200/    1290 : 4EB9 00C0 04CE          jsr     BIOSF_MESS_OUT
     201/    1296 :                     
     202/    1296 :                     	; Animate
     203/    1296 : 4A39 0010 000E      	tst.b   DIRECTION
     204/    129C : 6716                	beq     .dir_up
     205/    129E : 5539 0010 000C      	subq.b  #2,COUNT			; Move 2px per frame
     206/    12A4 : 4A39 0010 000C          tst.b   COUNT
     207/    12AA : 661E                    bne     .dir_end
     208/    12AC : 4239 0010 000E          clr.b  	DIRECTION
     209/    12B2 : 6016                    bra     .dir_end
     210/    12B4 :                     .dir_up:
     211/    12B4 : 5439 0010 000C      	addq.b  #2,COUNT
     212/    12BA : 0C39 0074 0010 000C     cmp.b   #116,COUNT
     213/    12C2 : 6606                    bne     .dir_end
     214/    12C4 : 50F9 0010 000E          st.b    DIRECTION
     215/    12CA :                     .dir_end:
     216/    12CA :                     
     217/    12CA :                         ; 0~116, 116~0, ping-pong line animation
     218/    12CA :                         ; 15-tiles bar
     219/    12CA :                         ; 0: 80000000...
     220/    12CA :                         ; 1: 70000000...
     221/    12CA :                         ; 2: 60000000...
     222/    12CA :                         ; 3: 50000000...
     223/    12CA :                         ; 4: 40000000...
     224/    12CA :                         ; 5: 3B000000...
     225/    12CA :                         ; 6: 2A000000...
     226/    12CA :                         ; 7: 19000000...
     227/    12CA :                         ; 8: 08000000...
     228/    12CA :                         ; First empty tiles = N / 8
     229/    12CA :                         ; Left tile # = 8 - (N & 7)
     230/    12CA :                         ; Right tile # = (N & 7) > 4 ? 16 - (N & 7) : 0
     231/    12CA :                     	; Tile # offset = $300
     232/    12CA :                     
     233/    12CA :                     	; Render in RAM
     234/    12CA : 41F9 0010 0010      	lea     VRAM_BUFFER,a0
     235/    12D0 : 123C 0001           	move.b  #1,d1
     236/    12D4 : 1039 0010 000C      	move.b  COUNT,d0
 AS V1.42 Beta [Bld 79] - source file main.asm - page 10 - 1/19/2017 10:57:34


     237/    12DA : 1400                	move.b  d0,d2
     238/    12DC : E608                	lsr.b   #3,d0				; N / 8
     239/    12DE : 670A                	beq     .no_padding
     240/    12E0 : D200                	add.b   d0,d1
     241/    12E2 :                     .pad:
     242/    12E2 : 30FC 0300           	move.w  #$0300,(a0)+		; Empty tile
     243/    12E6 : 5300                	subq.b  #1,d0
     244/    12E8 : 66F8                	bne     .pad
     245/    12EA :                     
     246/    12EA :                     .no_padding:
     247/    12EA : 0202 0007           	andi.b  #7,d2
     248/    12EE : 1002                	move.b  d2,d0				; N & 7
     249/    12F0 : 4400                	neg.b   d0
     250/    12F2 : 0600 0008           	addi.b  #8,d0
     251/    12F6 : 0240 000F           	andi.w  #$000F,d0
     252/    12FA : 0040 0300           	ori.w   #$0300,d0
     253/    12FE : 30C0                	move.w  d0,(a0)+			; Left tile
     254/    1300 :                     
     255/    1300 : 1002                	move.b  d2,d0
     256/    1302 : B03C 0004           	cmp.b   #4,d0
     257/    1306 : 6312                	bls     .no_right
     258/    1308 : 5201                	addq.b  #1,d1
     259/    130A : 4400                	neg.b   d0
     260/    130C : 0600 0010           	addi.b  #16,d0
     261/    1310 : 0240 001F           	andi.w  #$001F,d0
     262/    1314 : 0040 0300           	ori.w   #$0300,d0
     263/    1318 : 30C0                	move.w  d0,(a0)+			; Right tile
     264/    131A :                     
     265/    131A :                     .no_right:
     266/    131A :                     .fill:
     267/    131A : B23C 000F           	cmp.b   #15,d1
     268/    131E : 6708                	beq     .no_fill
     269/    1320 : 30FC 0300           	move.w  #$0300,(a0)+
     270/    1324 : 5201                	addq.b  #1,d1
     271/    1326 : 66F2                	bne     .fill
     272/    1328 :                     .no_fill:
     273/    1328 :                     
     274/    1328 : 6000 FDBC           	bra     MainLoop
     275/    132C :                     
     276/    132C :                     
     277/    132C :                     
     278/    132C :                     hex2bcd:
     279/    132C : 7E04                    moveq.l #4,d7				; 4 digits
     280/    132E : 7400                	moveq.l #0,d2
     281/    1330 :                     .conv_loop:
     282/    1330 : 80FC 000A           	divu.w  #10,d0
     283/    1334 : 2200                	move.l  d0,d1
     284/    1336 : C0BC 0000 FFFF          and.l   #$FFFF,d0			; Keep quotient
     285/    133C : 4241                    clr.w   d1					; Keep remainder
     286/    133E : E889                    lsr.l   #4,d1
     287/    1340 : E84A                    lsr.w   #4,d2
     288/    1342 : D441                    add.w   d1,d2				; Insert new digit
     289/    1344 : 5307                    subq.b  #1,d7
     290/    1346 : 66E8                    bne     .conv_loop
     291/    1348 : 4E75                    rts
     292/    134A :                     
     293/    134A :                     MESS_MENU:
     294/    134A : 0001                	dc.w $0001					; Bytes, end code = $FF
     295/    134C : 00FF                	dc.w $00FF
     296/    134E :                     
 AS V1.42 Beta [Bld 79] - source file main.asm - page 11 - 1/19/2017 10:57:34


     297/    134E : 2002                	dc.w $2002  				; Set auto-inc
     298/    1350 :                     
     299/    1350 : 0003                	dc.w $0003					; Set VRAM address
     300/    1352 : 7184                	dc.w $7184
     301/    1354 :                     
     302/    1354 : 0108                	dc.w $0108					; Write with big font
     303/    1356 : 4E45 4F47 454F 2020 	dc.b "NEOGEO  LAG TEST", $FF
                    4C41 4720 5445 5354 
                    FF00                
     304/    1368 :                     
     305/    1368 : 0003                	dc.w $0003					; Set VRAM address
     306/    136A : 7230                	dc.w $7230
     307/    136C :                     
     308/    136C : 0007                	dc.w $0007					; Write
     309/    136E : 6D73 FF00           	dc.b "ms", $FF
     310/    1372 :                     
     311/    1372 : 0003                	dc.w $0003					; Set VRAM address
     312/    1374 : 7196                	dc.w $7196
     313/    1376 :                     
     314/    1376 : 0007                	dc.w $0007					; Write
     315/    1378 : 3120 6672 616D 6520 	dc.b "1 frame = 16.8ms", $FF
                    3D20 3136 2E38 6D73 
                    FF00                
     316/    138A :                     
     317/    138A : 0000                	dc.w $0000
     318/    138C :                     
     319/    138C :                     box_data:
     320/    138C : 0011 0004               dc.w 17, 4
     321/    1390 : 000C 000D 000D 000D     dc.w 12,13,13,13,13,13,13,13,20,13,13,13,13,13,13,13,14
                    000D 000D 000D 000D 
                    0014 000D 000D 000D 
                    000D 000D 000D 000D 
                    000E                
     322/    13B2 : 000F 0000 0000 0000     dc.w 15,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16
                    0000 0000 0000 0000 
                    0000 0000 0000 0000 
                    0000 0000 0000 0000 
                    0010                
     323/    13D4 : 000F 0000 0000 0000     dc.w 15,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16
                    0000 0000 0000 0000 
                    0000 0000 0000 0000 
                    0000 0000 0000 0000 
                    0010                
     324/    13F6 : 0011 0012 0012 0012     dc.w 17,18,18,18,18,18,18,18,21,18,18,18,18,18,18,18,19
                    0012 0012 0012 0012 
                    0015 0012 0012 0012 
                    0012 0012 0012 0012 
                    0013                
     325/    1418 :                         
     326/    1418 :                         INCLUDE "video.asm"
(1)    1/    1418 :                     automap:
(1)    2/    1418 : 33C1 003C 0000      	move.w  d1,VRAM_ADDR
(1)    3/    141E : 3618                    move.w  (a0)+,d3			    ; Width
(1)    4/    1420 : 3818                    move.w  (a0)+,d4			    ; Height
(1)    5/    1422 : 3A03                    move.w  d3,d5
(1)    6/    1424 : 33FC 0020 003C 0004 	move.w  #$20,VRAM_MOD
(1)    7/    142C :                     .height_loop:
(1)    8/    142C : 3605                    move.w  d5,d3					; Reload width
(1)    9/    142E :                     .width_loop:
(1)   10/    142E : 3018                    move.w  (a0)+,d0
 AS V1.42 Beta [Bld 79] - source file main.asm(video.asm) - page 12 - 1/19/2017 10:57:34


(1)   11/    1430 : D042                	add.w   d2,d0
(1)   12/    1432 : 33C0 003C 0002      	move.w  d0,VRAM_RW
(1)   13/    1438 : 4E71                    nop
(1)   14/    143A : 5343                    subq.w  #1,d3
(1)   15/    143C : 66F0                    bne     .width_loop
(1)   16/    143E : 5241                	addq.w  #1,d1
(1)   17/    1440 : 33C1 003C 0000      	move.w  d1,VRAM_ADDR			; Next line
(1)   18/    1446 : 5344                    subq.w  #1,d4
(1)   19/    1448 : 66E2                    bne     .height_loop
(1)   20/    144A : 4E75                	rts
(1)   21/    144C :                     
(1)   22/    144C :                     vramcopy:
(1)   23/    144C : 41F9 0010 0010      	lea     VRAM_BUFFER,a0
(1)   24/    1452 : 4E71                	nop
(1)   25/    1454 : 4E71                	nop
(1)   26/    1456 :                     .copy_loop:
(1)   27/    1456 : 33D8 003C 0002          move.w  (a0)+,VRAM_RW
(1)   28/    145C : 4E71                    nop                  			; Slow the fuck down
(1)   29/    145E : 5307                    subq.b  #1,d7
(1)   30/    1460 : 66F4                    bne     .copy_loop
(1)   31/    1462 : 4E75                    rts
(1)   32/    1464 :                     
(1)   33/    1464 :                     digiwrite:
(1)   34/    1464 : 7E04                    moveq.l #4,d7				; 4 digits
(1)   35/    1466 : 7200                	moveq.l #0,d1
(1)   36/    1468 : 33FC FFE0 003C 0004     move.w  #-$20,VRAM_MOD		; Draw backwards (simpler)
(1)   37/    1470 :                     .disp_loop:
(1)   38/    1470 : 1200                	move.b  d0,d1
(1)   39/    1472 : 0201 000F           	andi.b  #$F,d1
(1)   40/    1476 : B23C 0009           	cmp.b   #9,d1				; Hex to ASCII
(1)   41/    147A : 6302                	bls     .num
(1)   42/    147C : 5E01                	addq.b  #7,d1
(1)   43/    147E :                     .num:
(1)   44/    147E : 0641 0030           	addi.w  #$30,d1
(1)   45/    1482 : 33C1 003C 0002          move.w  d1,VRAM_RW
(1)   46/    1488 : E848                    lsr.w   #4,d0				; Next nibble
(1)   47/    148A : 5307                	subq.b  #1,d7
(1)   48/    148C : 66E2                    bne     .disp_loop
(1)   49/    148E : 4E75                    rts
(1)   50/    1490 :                     
     327/    1490 :                     
 AS V1.42 Beta [Bld 79] - source file main.asm - page 13 - 1/19/2017 10:57:34


  symbol table (* = unused):
  ------------------------

*ARCHITECTURE :  i386-unknown-win32 - |  AUTOMAP :                     1418 C |
 AUTOMAP.HEIGHT_LOOP :         142C C |  AUTOMAP.WIDTH_LOOP :          142E C |
 BACKDROPCOLOR :             401FFE - | *BIGENDIAN :                      0 - |
*BIOSF_CARD :                C00468 - | *BIOSF_CARD_ERROR :          C0046E - |
*BIOSF_CDDACMD :             C0056A - | *BIOSF_CREDIT_CHECK :        C00450 - |
*BIOSF_CREDIT_DOWN :         C00456 - |  BIOSF_FIX_CLEAR :           C004C2 - |
*BIOSF_HOWTOPLAY :           C00474 - |  BIOSF_LSP_1ST :             C004C8 - |
 BIOSF_MESS_OUT :            C004CE - | *BIOSF_READ_CALENDAR :       C0045C - |
 BIOSF_SYSTEM_INT1 :         C00438 - | *BIOSF_SYSTEM_IO :           C0044A - |
 BIOSF_SYSTEM_RETURN :       C00444 - | *BIOSF_UPLOAD :              C00546 - |
*BIOSF_VIDEOEN :             C00470 - | *BIOS_COUNTRY_CODE :         10FD83 - |
*BIOS_CRDF :                 10FDC4 - | *BIOS_CRDFILE :              10FDD0 - |
*BIOS_CRDNGH :               10FDCE - | *BIOS_CRDPTR :               10FDC8 - |
*BIOS_CRDRESULT :            10FDC6 - | *BIOS_CRDSIZE :              10FDCC - |
*BIOS_DAY :                  10FDD4 - | *BIOS_DEVMODE :              10FE80 - |
*BIOS_GAME_DIP :             10FD84 - | *BIOS_HOUR :                 10FDD6 - |
 BIOS_MESS_BUSY :            10FDC2 - |  BIOS_MESS_POINT :           10FDBE - |
*BIOS_MINUTE :               10FDD7 - | *BIOS_MONTH :                10FDD3 - |
*BIOS_MVS_FLAG :             10FD82 - | *BIOS_P1CHANGE :             10FD97 - |
*BIOS_P1CURRENT :            10FD96 - | *BIOS_P1PREVIOUS :           10FD95 - |
*BIOS_P1REPEAT :             10FD98 - | *BIOS_P1STATUS :             10FD94 - |
*BIOS_P1TIMER :              10FD99 - | *BIOS_P2CHANGE :             10FD9D - |
*BIOS_P2CURRENT :            10FD9C - | *BIOS_P2PREVIOUS :           10FD9B - |
*BIOS_P2REPEAT :             10FD9E - | *BIOS_P2STATUS :             10FD9A - |
*BIOS_P2TIMER :              10FD99 - | *BIOS_SECOND :               10FDD8 - |
*BIOS_SELECT_TIMER :         10FDDA - | *BIOS_START_FLAG :           10FDB4 - |
*BIOS_STATCHANGE :           10FDAD - | *BIOS_STATCURNT :            10FDAC - |
 BIOS_SYSTEM_MODE :          10FD80 - | *BIOS_UPBANK :               10FEDB - |
*BIOS_UPDEST :               10FEF4 - | *BIOS_UPSIZE :               10FEFC - |
*BIOS_UPSRC :                10FEF8 - | *BIOS_UPZONE :               10FEDA - |
*BIOS_USER_MODE :            10FDAF - |  BIOS_USER_REQUEST :         10FDAE - |
*BIOS_WEEKDAY :              10FDD5 - | *BIOS_YEAR :                 10FDD2 - |
 BLACK :                       8000 - | *BLUE :                        100F - |
 BOX_DATA :                    138C C | *BRANCHEXT :                      0 - |
*CASESENSITIVE :                  0 - | *CNT_A :                          4 - |
*CNT_B :                          5 - | *CNT_C :                          6 - |
*CNT_D :                          7 - | *CNT_DN :                         1 - |
*CNT_LE :                         2 - | *CNT_RI :                         3 - |
*CNT_UP :                         0 - | *CONSTPI :        3.141592653589793 - |
 COUNT :                     10000C C | *CYAN :                        30FF - |
*DATE :                   1/19/2017 - |  DIGIWRITE :                   1464 C |
 DIGIWRITE.DISP_LOOP :         1470 C |  DIGIWRITE.NUM :               147E C |
 DIRECTION :                 10000E C |  ERRCHK :                       224 C |
 ERRDIVZERO :                   224 C |  ERRG :                         222 C |
 ERRLINEA :                     224 C |  ERRLINEF :                     224 C |
 ERRTRAPV :                     224 C | *FALSE :                          0 - |
*FIXMAP :                      7000 - |  FLAG_UPDATE :               100002 C |
 FLAG_VBI :                  100000 C |  FRAMES :                    100004 C |
*FULLPMMU :                       1 - |  GREEN :                       20F0 - |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
 HEX2BCD :                     132C C |  HEX2BCD.CONV_LOOP :           1330 C |
*INEXTMODE :                      0 - |  INIT :                         25A C |
*INLWORDMODE :                    0 - | *INMAXMODE :                      0 - |
*INSRCMODE :                      0 - | *INSUPMODE :                      1 - |
 IRQ3 :                         300 C |  JT_USER :                      226 C |
 LAG_LATCH :                 100008 C |  LAG_LINES :                 100006 C |
 AS V1.42 Beta [Bld 79] - source file main.asm - page 14 - 1/19/2017 10:57:34


 LAG_SIGN :                  10000A C | *LISTON :                         1 - |
*MACEXP :                         1 - |  MAGENTA :                     5F0F - |
 MAINLOOP :                    10E6 C |  MAINLOOP.DIR_END :            12CA C |
 MAINLOOP.DIR_UP :             12B4 C |  MAINLOOP.FILL :               131A C |
 MAINLOOP.FLASH :              1128 C |  MAINLOOP.NO_EE :              1290 C |
 MAINLOOP.NO_FILL :            1328 C |  MAINLOOP.NO_INPUT :           11C8 C |
 MAINLOOP.NO_PADDING :         12EA C |  MAINLOOP.NO_REF :             1168 C |
 MAINLOOP.NO_RIGHT :           131A C |  MAINLOOP.NO_UPDATE :          120E C |
 MAINLOOP.ORANGE :             111E C |  MAINLOOP.PAD :                12E2 C |
 MAINLOOP.POSITIVE :           11B2 C |  MAINLOOP.RED :                1124 C |
 MAINLOOP.TRIG_LOOP :          114A C |  MESS_MENU :                   134A C |
*MIDBLUE :                     1007 - | *MIDCYAN :                     3077 - |
*MIDGREEN :                    2070 - | *MIDGREY :                     7777 - |
*MIDMAGENTA :                  5707 - | *MIDRED :                      4700 - |
*MIDYELLOW :                   6770 - | *MOMCPU :                     68000 - |
*MOMCPUNAME :                 68000 - | *NESTMAX :                      100 - |
*ORANGE :                      6F70 - | *PACKING :                        0 - |
*PADDING :                        1 - |  PALETTES :                  400000 - |
 PREV_INPUT :                100030 C |  RAMSTART :                  100000 - |
 RED :                         4F00 - | *REG_BRDFIX :                3A000B - |
*REG_CRDLOCK1 :              3A0015 - | *REG_CRDLOCK2 :              3A0007 - |
*REG_CRDNORMAL :             3A0019 - | *REG_CRDREGSEL :             3A0009 - |
*REG_CRDUNLOCK1 :            3A0005 - | *REG_CRDUNLOCK2 :            3A0017 - |
*REG_CRTFIX :                3A001B - |  REG_DIPSW :                 300001 - |
*REG_DISPDSABL :             3A0011 - | *REG_DISPENABL :             3A0001 - |
 REG_IRQACK :                3C000C - |  REG_LSPCMODE :              3C0006 - |
 REG_P1CNT :                 300000 - |  REG_P2CNT :                 340000 - |
*REG_PALBANK0 :              3A001F - | *REG_PALBANK1 :              3A000F - |
*REG_POUTPUT :               380001 - | *REG_SLOT :                  380021 - |
*REG_SOUND :                 320000 - | *REG_SRAMLOCK :              3A000D - |
*REG_SRAMUNLOCK :            3A001D - |  REG_STATUS_A :              320001 - |
*REG_STATUS_B :              380000 - | *REG_SWPROM :                3A0013 - |
 REG_TIMERHIGH :             3C0008 - |  REG_TIMERLOW :              3C000A - |
*REG_TIMERSTOP :             3C000E - | *RELAXED :                        0 - |
*SCB1 :                           0 - | *SCB2 :                        8000 - |
*SCB3 :                        8200 - | *SCB4 :                        8400 - |
 SCODE :                        186 C |  SOFTDIPS :                     200 C |
*SOUND_STOP :                D00046 - |  START :                       1000 C |
 START.CLEAR_RAM :             1024 C | *TIME :                    10:57:33 - |
 TMRI :                         30A C | *TRUE :                           1 - |
 USER :                         236 C |  VBI :                          31A C |
 VBI.USERVBI :                  32A C | *VERSION :                     142F - |
 VRAMCOPY :                    144C C |  VRAMCOPY.COPY_LOOP :          1456 C |
 VRAM_ADDR :                 3C0000 - |  VRAM_BUFFER :               100010 C |
 VRAM_MOD :                  3C0004 - |  VRAM_RW :                   3C0002 - |
 WHITE :                       7FFF - |  YELLOW :                      6FF0 - |
 _RT :                          258 C |

    207 symbols
    121 unused symbols

 AS V1.42 Beta [Bld 79] - source file main.asm - page 15 - 1/19/2017 10:57:34


  codepages:
  ----------

STANDARD (0 changed characters)


0.05 seconds assembly time

    657 lines source file
      2 passes
      0 errors
      0 warnings
